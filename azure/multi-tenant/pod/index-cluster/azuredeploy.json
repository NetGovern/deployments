{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineBaseName": {
            "type": "string"
        },
        "osAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the OS admin account with sudo rights to be provisioned"
            }
        },
        "osAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the OS admin account"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "allowedValues": [
                "Standard_B2ms",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3"
            ]
        },
        "count": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of VMs to deploy."
                }
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "dataDiskSizeGB": {
            "type": "int",
            "defaultValue": 150,
            "minValue": 150,
            "maxValue": 1024
        },
        "fullPodDeployment": {
            "type": "string",
            "defaultValue": "no",
            "allowedValues": [
                "no",
                "Do not change this option - Please select \"no\"",
                "yes"
            ]
        }
    },
    "variables": {
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "publicIpAddressType": "Dynamic",
        "publicIpAddressSku": "Basic",
        "storageAccountType": "Premium_LRS",
        "scriptsLocationUri": "https://bitbucket.netmail.com/projects/PUB/repos/deployments/raw/scripts/"
    },
    "resources": [
        {
            "condition": "[equals(parameters('fullPodDeployment'), 'no')]",
            "apiVersion": "2018-02-01",
            "name": "pid-18cbf8c1-4bc2-4973-b983-01f019ff68cf",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "name": "[concat(parameters('virtualMachineBaseName'), copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_NIC')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(parameters('virtualMachineBaseName'), copyIndex(1))]",
                    "adminUsername": "[parameters('osAdminUsername')]",
                    "adminPassword": "[parameters('osAdminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "OpenLogic",
                        "offer": "CentOS",
                        "sku": "7.5",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountType')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": "[parameters('dataDiskSizeGB')]",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat( parameters('virtualMachineBaseName'), copyIndex(1),'_NIC'))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "IndexCopy",
                "count": "[parameters('count')]"
            }
        },
        {
            "name": "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_NIC')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_IP')]",
                "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_NSG')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', concat(parameters('virtualMachineBaseName'), copyIndex(1),'_IP'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(parameters('virtualMachineBaseName'), copyIndex(1),'_NSG'))]"
                }
            },
            "copy": {
                "name": "IndexCopy",
                "count": "[parameters('count')]"
            }
        },
        {
            "name": "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_IP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "copy": {
                "name": "IndexCopy",
                "count": "[parameters('count')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'/extensions')]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineBaseName'), copyIndex(1))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {},
                "protectedSettings": {
                    "commandToExecute": "[concat('sh azure_configure_new_data_disk.sh && sh install_index.sh -p ',parameters('osAdminPassword'))]",
                    "fileUris": [
                        "[concat(variables('scriptsLocationUri'),'azure_configure_new_data_disk.sh')]",
                        "[concat(variables('scriptsLocationUri'),'install_index.sh')]"
                    ]
                }
            },
            "copy": {
                "name": "IndexCopy",
                "count": "[parameters('count')]"
            }
        },
        {
            "name": "[concat(parameters('virtualMachineBaseName'), copyIndex(1),'_NSG')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-01-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1010,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceApplicationSecurityGroups": [],
                            "destinationApplicationSecurityGroups": [],
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            },
            "copy": {
                "name": "IndexCopy",
                "count": "[parameters('count')]"
            }
        }
    ],
    "outputs": {
        "zookeeperIpAddress": {
            "type": "string",
            "value": "[reference(concat(parameters('virtualMachineBaseName'), '1_NIC')).ipConfigurations[0].properties.privateIPAddress]"
        }
    }
}